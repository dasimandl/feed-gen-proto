import pandas as pd
from sklearn.feature_extraction.text import CountVectorizer, TfidfVectorizer, TfidfTransformer
from nltk.corpus import stopwords
import sys
sys.path.append("./utils")
from helperFunctions import *

custom_stopwords = get_stopwords()

articles = pd.read_pickle('./pickle-files/preprocessed_docs.pkl')

print('length of articles', len(articles))

df_articles = pd.DataFrame(articles)

docs = df_articles['full_text'].tolist()

vectorizer = TfidfVectorizer(max_df=0.85, smooth_idf=True, use_idf=True,stop_words=custom_stopwords)
X = vectorizer.fit_transform(docs)

# tfidf_transformer=TfidfTransformer(smooth_idf=True,use_idf=True)
# tfidf_transformer.fit(word_count_vector)

# save_obj(word_count_vector, 'word_count_vector')

print(list(vectorizer.vocabulary_.keys())[:50])
print(vectorizer.vocabulary_['tung'])


# test = "aws plain english expeditedssl fast easy aws ssl aws plain english amazon web service plain english hey hear new aws service containercache elasticast course plus opaquely name service decide plain english description need hey sponsor sendcheckit sponsored mean work update list email newsletter run app service matter aws end service interact call amazon virtual server host bit think computer http www linode com handwavy instance similar virtual private server linode digitalocean rackspace iam call user key cert set additional user set new aws key policy call amazon unlimited ftp server store image asset website keep backup share file service host static website aws service write read plain english bucket object vpc call amazon virtual colocated rack overcome objection stuff internet add additional layer security aws service little network small piece big network familar networking vlans lambda call aws app script run little self contain snippet java python discrete task sort combination queue execution store execute change aws setup respond event dynamodb lambda plain english web developer service set web app end similar find heroku addon marketplace api gateway call api proxy proxy apps api throttle bad client traffic test new version present method cleanly scale rds call amazon sql app mysql postgres oracle database heroku postgres route call amazon dns domains buy new domain set dns record domain dnsimple godaddy gandi call amazon transactional email email password reset notification newsletter write great idea sendgrid mandrill postmark cloudfront call amazon cdn website load fast spread static file delivery close user maxcdn akamai cloudsearch call amazon fulltext search pull data rds search instance jimmy sphinx solr elasticsearch dynamodb call amazon nosql app massively scalable key valueish store mongolab elasticache call amazon memcached app memcached redis redis memcachier elastic transcoder call amazon begin cut deal video weirdness change format compress sqs call amazon queue store data future processing queue lingo store message email sms sqs logic place put take rabbitmq sidekiq waf call aws firewall block bad request cloudfront protected site aka people try password admin sophos kapersky mobile app developer service service work mobile developer cognito call amazon oauth service give end user non aws ability log google facebook oauth device farm call amazon drawer old android device test app bunch android device simultaneously mobiletest emulator mobile analytics call spot name amazon product manager take note track people inside app flurry call amazon messenger mobile notification email sms message urbanairship twilio ops deployment service automate manage deploy service codecommit call amazon github version control host git github bitbucket deploy call bad codecommit repo github bunch instance sane way heroku capistrano codepipeline call amazon continuous integration run automated test stuff depend pass test circleci travis container service call amazon docker service put dockerfile instance run website elastic beanstalk call amazon platform service move app host heroku aws expensive heroku bluemix modulus enterprise corporate service service business network appstream call amazon citrix put copy windows application window machine people remote access citrix rdp direct connect call pretty spot actually pay telco aws dedicate lease line data center network aws cheap internet data toll road turnpike bypass crowded side street directory service call pretty spot actually tie apps need microsoft active directory control workdocs call amazon unstructured file share word doc colleague dropbox dataanywhere workmail call amazon company email give company email system calendar google apps domain workspace call amazon remote computer give standard window desktop remotely control service catalog call amazon setup give aws user group access preset apps build read guide storage gateway call pretend part corporate network buying storage keep word doc automate file corporate network easy big data service service ingest manipulate massage data data pipeline call amazon etl extract transform load data aws schedule happen alert fail elastic map reduce call amazon hadooper iterate massive text file raw data keep treasure data glacier call slow amazon backup backup keep beware cost data back hurry long term archive kinesis call amazon high throughput ingest data quickly analytics people retweeting kanye later aws service analyze kafka redshift call amazon data warehouse store whole bunch analytics data processing dump machine learn call skynet predict future behavior exist data problem fraud detection people buy buy swf call amazon queue build service deciders worker top accomplish set task sqs logic set inside service determine happen ironworker snowball call aws big old portable storage bunch hard drive attach network large amount terabyte data aws ship network attach storage device aws aws management service aws difficult manage invent bunch service sell easy manage cloudformation call amazon service setup set bunch connect aws service cloudtrail call amazon log log aws stack api call cloudwatch call amazon status pager alert aws service mess disconnect pagerduty statuspage config call amazon configuration management keep insane large aws setup change happen track opsworks call amazon chef handle run application auto scaling trust advisor call amazon pennypincher find pay aws setup unused instance inspector call amazon auditor scan aws setup determine setup insecure way alert logic hey sponsor sendcheckit sponsored mean work update list email newsletter buzzwordcompliant llc service expeditedssl support expeditedssl com"

# test = "episode mapillary company process high volume image develop labeled model physical world mapillary apis allow developer build application aware sign building street tree physical object real world space potential case mapillary numerous range self drive augmented reality build model real world expose apis model real world perfect representation reality year change tool advance able build access physical world mapillary possible combination modern development high quality smart phone camera allow user crowdsource image world cloud compute allows cheap workload processing computer vision technique allow image stitch representation deep learning architecture improve classification segmentation object image peter kontschieder head research mapillary join show talk technology research enable mapillary build futuristic business access physical world look sponsor interested reach developer softwareengineeringdaily sponsor find message love hear engineer work company market developer hire developer tell marketing department recruiting department softwareengineeringdaily sponsor help thanks listen show peter kontschieder head research mapillary welcome jeff great look forward talk mapillary image representation computer vision think start basic computer vision gradually application computer vision difference research application start fundamental take image image represent numerically matrix pixel mean dimension maybe image mean green blue value define color pixel space numerical representation image interesting image give overview take image mathematical representation matrix extract meaning image actually discuss computer vision especially image base computer vision consider image image hold bunch number pixel color channel combination know represent color pixel structured align data grid refer image human person machine regular grit data arrange come computer vision find identify pattern image correspond human identify image take look image person clear notion pixel random shuffled form object consistent manner delineation outline object naturally absorb look think machine need start build representation machine actually exploit structure data form computation input order identify object detect segment require computational know capacity actually usable practice business application self driving give short answer abstract normal regular input image tell number object interested object locate think fill number lecture university abbreviate quickly cover basic concept example image represent matrix pixel nice look order analyze image call convolution matrix pixel explain convolution refer current stream technology algorithm computer vision deep learn deep learning actually extraction semantic level input image identify image abstraction layer layer example convolution convolution local operator local operator locally perform multiplication addition depend convolutional kernel kernel find specific pattern image start react local image think maybe think circular shape pattern convolutional kernel similar structure find matching pattern input image fire area term response area image example specific convolution convolutional kernel apply image find specific fire maybe body tail gradually gradual process start look narrow local feature call layer explain whole mean individual piece assemble progress deep layer convolutional neural network take matrix matrix zero able identify look upper right hand corner matrix bunch agree look happen right hand corner convolution system find edge find circle similar deep complex computer basic analysis bunch upper right hand corner computer collection pixel space look circle look start build high level abstraction associate matrix pixel able identify convolutional kernel parameter eventually learn process train deep neural network convolutional neural networking simple example actually write task optimization problem optimization problem solve find individual convolutional operator look order best possibly explain solve optimization problem respond best possible solve problem find convolutional kernel look possible find exactly pattern best data learn train data learning problem right collection image image label computer identify section picture number term spend basic computer vision podcasts cover term define latent space explain latent space refer latent space term convolutional network deep neural network start discussion image matrix input output label image show order translation original input data output statement largely undefined easily understand input image output come hidden layer hidden latent state model operate mean undergo number transformation input output state latent define advance right guess network build deep deep well define operator edge detection layer circle detection layer high high level territory computer take edge circle layer abstract latent space latent space cover feature hard human nonetheless base pattern latent surface level understanding collection image accurate look refer hidden layer hide state people start visualize deep neural network understand hood early layer find response edge sharp transition level feature call deeply network layer find agglomerate local start assemble response look actual object find think cover basic people excited deep learning idea take image look image earth explain computer image music piece music highly dimensional abstract concept music piece define break mathematical term structure computer understand level build rich abstraction define maybe word label computer computer learn mathematical space latent space compose concept exciting deep learning least absolutely right maybe fill hole happen start computer vision space deep learning narrow artificial intelligence method today beginning people work model method explicit solve computer vision task people object term shape find shape model understand well explain object interested recognize deep learning sudden need first curated collect data example large data source data source annotate talk human annotation person annotate data important part large mass annotated datasets help tackle problem perspective perspective model define input output simple example perform image classification care fine detail free input image single label attach sorry result model second part need computation need order train model exciting part definitely define problem term mathematics start solve underlie optimization problem train long data explain problem model eventually find absorb training data come show unseen image model still give correct answer model predict data continue evolution architecture convolutional neural network architecture alexnet vggnet googlenet know history give brief history technology improve research evolution mean cnns convolutional neural network actually mean people inaudible found father geoff hinton work fairly long actually cnns come beginning start fairly shallow network small capacity layer parameter parameterize model number neuron layer consider small begin large jump term point alexnet alexnet remember well paper present nipsp large important actually large important conference field think layer large number parameter name actual number layer increase capacity think insane deep jump jump sudden network later come collaborator find virtu residual network sudden layer large number variation come sudden extremely deep long specific task image classification capacity term layer model mean come complication properly train model data compute power actually wait model properly train start perform deep still trend parameter data source large data source still increase performance course come cost cost computational budget spend well discussion mapillary define application deep neural network computer vision fairly still move still efficient accurate tailwind mapillary answer question mapillary sense technology mapillary build year piece context frame business explain mapillary mapillary platform collaboratively collect streetlevel data take contributor type camera model world large platform operate order build joint representation world give detail build joint representation world high level large build block leave backend think greatly cover discussion peter neubauer computer vision pillars build modeling object recognition semantic segmentation maybe focus semantic segmentation discuss image classification give image machine tell likely class object category show semantic segmentation task task give input image assign categorical semantic label single pixel image mean example interested large number street level asset object point interest call assume dash dash drive traffic light cover large field view dash maybe crosswalk traffic light large number object image machine semantic segmentation image recognize pixel object interested mapillary number service start privacy protection automatically identify area human face blur license plate blur well extract actually identify traffic light find pixel image form traffic light second pillar mention modeling find actually position traffic light model world freebie model world meantime object category able recognize start pull object individually position data mapillary explain accurately tell wrong people contribute image cellphone people take picture smartphones crowdsourcing image world large influx image people take phone take picture phone automatically geotag latitude longitude world perfect degree accuracy imagine people take random picture world geotagged maybe derive angle take picture take image synthesize construct scene focus take image synthesize representation world application mention process look image think look image infer additional representation look image object segmentation area computer vision rapidly evolve show object segmentation define prominent shape image square object draw bounding segment maybe processing define object object segmentation object segment classification image maybe scene image street object segmentation across object scene sign prius well computer object object object pass bound classification algorithm bound bounding computer sign know sign image start work segmentation derive scene build model literally exist world model explore communicate computer sign world ascribe later maybe ascribe mean sign computer eventually understand model world object happen sign sign typically tell people drive tell wrong representation mapillary basic building block name first model sequence image capture download capturing software signal take image upload server call structure motion structure motion allow extract threedimensional structure dimensional model base sequence least multiple twodimensional image find correspondence image identify point allow infer model world important allow redundant capture example drive second part take detour semantic segmentation directly input image semantic segmentation explain label assign semantic label single pixel image large number pixel small tool square example mention locally find consistent segmentation consistent object image interpret human perspective bunch pixel belonging example traffic light find group pixel model actually come data know correspondence position pixel model extract semantic interpretation semantic segmentation algorithm obviously grouping step involve think refer detection mechanism platform actually cluster algorithm cluster pixel contribute object traffic light surveillance camera find help position whole pipeline give sequence image extract relevant street level asset data point interest help application self drive maybe find place problem mention structure motion explain detail structure motion apply structure motion infer threedimensional structure dimensional image image take subsequent walk path take image subsequently find similar image right actually shift motion actually able identify corresponding part feature image corner prominent point find feature detector able infer structure base correspondence find important mapillary understanding mapillary today image data come people smartphone taking static image camera relevant mapillary need find model right operate model identify corresponds model infer real world build true representation scaled model real world position position object extract semantic perspective able perfectly segment image able assign latitude longitude term position identify object half wait right optimal image world right image show transition location spot world find path image model part structure motion part work perfectly allow extract coherent consistent model image object recognition task include semantic segmentation come soon recognize single instance semantic class help extract street level asset care customer care automated right image come people smartphones take picture people smartphones take video surveillance camera gather video drone gather video self driving module record video solve structure motion problem take advantage record image data improve mapillary view world right obviously quality data largely depend camera type camera camera smartphones today extremely course still room improvement depend image quality talk type distortion perfect world encounter data camera model find contribute accuracy quality result example back structure motion model problem feature identify match image reconstruction part solve find camera pose point camera find largely depend well data match eventually build invest brain power come model deal imperfect condition accept source imagery find course difference super expensive capturing rank capture image high quality oppose take generation smartphone maybe issue shutter camera type problem align challenge address work well exciting company least external perspective guess inside problem face point mapillary vision richly define vision world people query build application build self drive build drone build structure label model world excite barrier implement full dream product problem incremental tell engineering problem engineering problem data pipeline look storage space memory batch model correctly train model correctly cost control cloud computing infrastructure budget allocate money actually afford computer vision processing real scientific bottleneck worried feel forefront exciting question implementation think interesting question team work scientific forefront definitely example problem spend work recognition problem general semantic segmentation back couple year model start work number benchmark datasets scientist start develop model implement fail couple lucky persistent point start work ideally start work well take model publicly benchmark significant margin course additional scientific value efficient computationally efficient term runtime term final output metric care parameter room improvement second part question engineering perspective think large aspect engineering especially scale budget actually afford scale system handle amount data quote large amount data work fantastic engineering piece mainly back team computer vision team solve example privilege work research direction least first consideration bring large scale explore field inside exist problem course research perspective come application perspective whole field evolves company university research contribute knowledge great benefit think exciting part happy lucky right field kubernetes difficult container networking storage disaster recovery issue figure alone mesosphere kubernetes service single click kubernetes deployment simple management security feature high availability kubernetes deployment easy find mesosphere kubernetes service softwareengineeringdaily mesosphere mesosphere kubernetes service heals detect problem state cluster worry cluster easy install monitoring logging tool kubernetes cluster click install additional tooling prometheus linkerd jenkins service service catalog mesosphere build multi cloud hybrid cloud edge compute easy find mesosphere kubernetes service help easily deploy kubernetes check softwareengineeringdaily mesosphere support well reason mesosphere founder hindman first people interview software engineering back host software engineering radio generous explanation distribute system concept back year applied distributed system material little scant marketplace hard find distribute system production people evangelize talk obviously build apache mesos happy mesosphere sponsor check mesosphere support softwareengineeringdaily mesosphere interview continue talk company research division mapillary research division lead research division research engineering implementation begin division labor discovery research department implementation department nice startup environment short right still people work company especially engineering research side find actually turn work benchmark data mention include example mapillary vista data appreciate definitely attention product implementation scale orient team take research bring production soon possible nice find startup work super super smooth opinion find proud semantic segmentation development advancement help couple public benchmark year technology production think couple month pretty quick research department back forth industry academic research development mean long story technology responsibility academy responsibility industry responsibility relationship push pull value cross cultural area nips place people cross pollinate cross pollination academic world research world implementation world broadly people willing share willing share open close proprietary secret sauce give framing culture today think shift look back year think consider purely academic research maybe arrive company research level example look large silicon valley company mean research labs actually publish disseminate result publicly form technical report paper term friendly license commercial setting think reason fold large number people maybe stay academia scientific start develop experiment fail succeed undergo phase researcher point find write submit conference hopefully accept paper people field grow demand application point view mean largely deep learning actually start work interesting commercial perspective high demand sudden people skill attract people actually prefer academic setting offer great workplace term still work problem outcome actually directly translate product commercialization addition lack resource compute infrastructure data ingredient think contribute whole community open term share term money people vast quantity people industry purely academic world happen academic nonpartisan force people friedman start podcast recently actually artificial intelligence recommend podcast check nonpartisan enlighten start podcast beginning podcast still academic computer science move industry industry unlimited compute money product academia politicize remove politics politics pull virtue specific company immune academia maybe field rule need need understand understand participate area maybe come back question think still large number open unsolved problem deep learning talk still consider supervise setting right data annotate machine find optimal solution give data train model spit data match well ideally learn training data talk supervise learning narrow space machine learning think data label simply feasible label data world mean virtually large area receive scientific treatment people come smarter model deal mass data still work right know couple macroquestions read book recently superpower book implementation artificial intelligence technology china chinese startup speed deployment faster efficient quality bring model market place west part rich datasets variety reason difference nationality across research implementation computer vision specifically china stand computer vision machine learning circumstantial think general answer personal observation attendance conference cvpr grow large pace think large crowd maybe asian country think large cosmos startup start build number young company come example china show outstanding result benchmark datasets contributor think matter engineering important curiosity drive find find design model train course large financial backup company afford large cluster farm think multifaceted answer case sure find outstanding researcher engineer world definitely true strong rise especially people china company china look forward hear area computer science research world cross pollination sharing positive share computer vision opportunity unimaginable value gain value creation zero china computer vision take away reap reward compute computer vision value creation exist unimaginably large optimistic maybe geopolitical cross pollination least least scientist degree think expert hope learn hopefully interview people future listen suggestion people interview last question little optimistic spamming internet fake image fake video fake video talk recently mechanism detect deep fake deep fake obviously high quality naive solution improve deep fake detection rapidly fake video trump blink accurate human detect fake trump video fake blink rate detection interest enter world spam anti spam front real video thought area concern concerned think interesting question scientific perspective work reveal identify fake video video artificially generate successful think paper come generate fake material sure least paper identify fake video actually definitely completely story sure manipulate data mean reason form great benefit society society general aware least think twice start take video take grant education process think need start happen maybe start learn possible technological perspective aware take deal right well thanks humor totally unrelated mapillary real pleasure learn computer vision talk sure material future know dive mapillary take bunch thanks come show peter great talk thank invitation"
test = "episode google search allow human find access across human enters unstructured query search search engines link result human click link link bring webpage unstructured data human read understand news article video wikipedia page human understand result search engine google search solve problem organize distribute unstructured data across human consume diffbot company goal solve distinctly problem derive structure unstructured understand relationship structure allow machine utilize relationship entity across unstructured apis mike tung founder diffbot join show talk last decade spend build artificial intelligence application research stanford mature widely product diffbot build application diffbot apis encourage tinkerer prototype builder play diffbot access webpage structure data knowledge graph diffbot cool recommend check diffbot crawl entire parse websites comprehend page probabilistic estimation draw relationship entity page ambitious product ambitious idea mike work long enjoy conversation mention recently launch podcast fintech daily fintech daily payment cryptocurrencies trading intersection finance technology find fintechdaily apple google podcasts look host participate interested host fintech daily email host fintechdaily hope enjoy fintech daily hope enjoy episode mike tung founder diffbot welcome thanks jeff diffbot tool apis build knowledge graph construct company knowledge graph result take unstructured data structure data start discuss difference unstructured structured data define term sure unstructured data document webpage create primarily human read human read understand webpage sense convert mean structure structure data essentially data think relational database data break field field type value example person entity name title employer street address actually refer knowledge distinction data sequence symbol knowledge meaningful structured semantic world statement entity world example take document news article process article structure give example kind structure news article yeah actually start structured webpage dynamic webpage handwritten html anymore write editor microsoft frontpage document generate underlying database data sort born structure people favorite front edge language style little position html convert document human consumption diffbot essentially kind reverse engineer process start document back structured database representation artificial intelligence truly reading understand page person meant convert back structure return back developer json object essentially value yeah sense example diffbot structure data feature later specifically request diffbot wikipedia stevejobs diffbot take look webpage extract webpage back json object collection collection field title page featured image page page kind page article product purchase wikipedia article wikipedia stevejobs diffbot return response nail head familiar traditional scraping manually create scrapper involve scrapy python scrap tool write javascript visual tool import kapow essentially rule site xpath selector regular expression gather site create sort homespun crawler substantial scale across thousand site entire feasible create maintain rule site webpage redesign change layout rule create break happen average week sort rule maintain diffbot write rule pass diffbot handle rest first take pass automatic product render browser data center virtual machine browser first determine kind page allude article page product page person page image page organization company page place page find level entity page type comprise surface area diffbot first determine kind page homepage page call lead page article page computer vision natural language processing algorithm page look pixel page color font position person visible perspective rendered document look visible renderer actual internal state render engine layout http conversation determination type page extract property field type article page return back article title author publication clean text article clean html format version article image caption article well entity mention article publication country comment article essentially nearly perfect representation database generate article developer utilize inside apps business process example application article instapaper read article later snapchat discover stories feature duckduckgo article file search engine build application save article reading later example pocket think kind instapaper know pocket diffbot instapaper example save article late diffbot case service call give structured scrap page easy request yeah instapaper adopt diffbot homegrown system rule news site site save article subpar experience actually crowd source creation rule user actually edit result break huge maintenance effort think typical article page whole bunch include inside read later experience surround article inside article view popup cookie front article multipage click next button page actually full article encumbrance maintain write scrap rule right diffbot machine learning automatically able recognize visual pattern robustly high degree accuracy precision easy anymore back response save database later diffbot maybe wikipedia stevejobs receive request wikipedia page cached version crawl save page save structure page article call analyze generally request page demand cached version generally recently request recently article change product change price date right mention product utility amazon toiletpaper bounty toilet paper diffbot give price kind build application well little deep give application people build apis apis broadly yeah diverse customer base interested hear sort build overtime generally people build consumer application people build enterprise application right consumer space mention individual apps instapaper snapchat shop spring utilize article data product data people data organization data major consumer search engine microsoft bing yandex duckduckgo ecommerce search engine amazon ebay walmart include search engine voice assistance well require structured knowledge enterprise side people kind function imagine knowledge worker need sale query database sale lead recruit help find talent market build clear picture customer understand content content marketing large brand nike monitor place sell nike shoe determine break nsrp well product receive structure data allow analyze easily business intelligence kind wall street application structure data build quantitative trading algorithm news data organization entity analyst track sector well government improve national security reason case first come across diffbot flexible general idea google search kind search query look bunch additional entity search feel diffbot programmatic flexible building building structure data derive unstructured mean search google search engine infer structure article read turn least know google know google kind knowledge graph know diffbot anyway build diffbot think flexible actually surprise hear application build maybe kind backend sort tool yeah people diffbot kind google machine google search engine human crawl white google step deep google card catalogue type query return back result pointer page read ultimately human research still read page read understand take step deeper actually analyze read document convert structure unify knowledge graph actually actionable inside intelligence application google sort rout attention place ranking read inject advertising continue discuss extraction extra structure data feature product offer knowledge graph mention actually build database take knowledge crawl internet parse guess apis extraction actually crawl comprehensive extract structure data build relationship structure data webpage tell knowledge graph work yeah mission company build first comprehensive database human knowledge sort north star resource crawl full kind pretty pretty large endeavor right entity google bing first refine create highly accurate extractor require build crawler large infrastructure visit whole business model essentially developer similar twilio fraction penny call sort analyze customer right save data right yeah take structured data cache retrain model imagine course operate service hone hone human level accuracy processing billion month course month process billion size useful little incremental crawling full coverage imagine apply automatic classification extraction algorithm page surface extraction right sort look extraction extraction intensity iphone sell apple store sell bestbuy sell walmart refer product right page similarly person linkedin profile profile school webpage social networking profile mention blog news person entity automatic machine learn technique person resolve real world person place able cluster know extract real world concept person product organization take extract fuse calculate probability truth sort build entity single json object inject highly confident knowledge graph knowledge graph represent view entity universe developer wait analyze demand pass domain wait crawl domain issue call diffbot query language query knowledge graph answer structure search return back result second comment business model think pretty creative idea expensive crawl kind structure data amortize stand extraction sell extraction query webpage structure data little extraction take eventually build knowledge graph actually profit side benefit extraction people money actually processing human curation human gathering data sort forcing function force technology robust scraping tool create rule site literally pass write language japanese german language extract perfectly right environment enable develop technology solid industrial grade large company performance highly accurate business side company year start diffbot year think raise million kind small amount company year believe profitable kind interest antithetical structure business silicon valley love know kind story monetization reason fundraise kind business side think definitely typical silicon valley trend work third grade fascinate field remember student stanford work long formally incorporate company early period company alone dark room work math algorithm accurate take human level accuracy point sort commercially viable company launch hacker news first developer bunch sort silicon valley base developer work company think interest start kind prototyping application company term funding aspect launch figure need actually build company start machine operate hire people help write initially first version system hire smarter people come first round angel investment andy bechtolsheim first investor google vision kind lead seed round recently raise series lead early backer spacex tesla elon musk board well tencent large internet company dayton founder earthlink kind investor little nontraditional operator founder build tech company scale typical silicon valley kind sand hill road money manager type person people felt complemented skillset understand long term technical vision experience kind grad avenge kind business twilios stripe world understanding unit economics beginning request need charge money profitable early control destiny little guess explain year seed series well definitely expert consumer internet company popular successful know enterprise well defined technical challenge people accurate timely data exist problem business business structure data huge chunk knowledge worker gather maintain update data databases convince people sort newfangled business create demand sure deliver accuracy high compare human process challenge definitely engineering kind know convince guess hype think cool product especially kind long long work knowledge graph assemble crawling offer crawl service build core competency extraction build competency crawl crawler service crawl entire domain example help case goal mean whole extraction crawl sort trojan horse build knowledge graph world knowledge graph database model query database mean graph database store memory knowledge graph world store query rough stats order billion entity knowledge graph right trillion edge entity node edge knowledge graph give example mike tung type person knowledge graph diffbot type organization relation employ work company large database think traditional databases database largely human generate think push limit large database system system essentially discovering entity generate read document discover million entity month scale datacenter think store knowledge graph essentially output machine learn pipeline input large output highly confident highly accurate knowledge graph store knowledge graph queryable evaluate dozen current shelf graph database find generally fail lockup million million entity depend meet engineering requirement build knowledge graph load data database take week point load data compromise normalized data edge inject value store incoming debug query language query query store return result pretty fast still area actively research keep pretty close touch graph vendor pretty interested able host world large knowledge graph system love build graph database able design scale quadrillion entity model store entity document database denormalized store edge guess field take document database shelf cassandra yeah constantly experiment couple cassandra test elasticsearch test value store operate multiple machine kind space tradeoff design mention normalize couple edge mean query kind graph query least mean offline development system query span table right give person work organization organization base city city place person live right find least kind business customer developer customer actually need write query join table write query involve traverse random walking graph envy engineering problem tough stuff explain normalization mean context people listen understand mean need yeah normalization database term query faster copy edge edge relational base field concept primary right reference table normalization copy table duplicate data across place reference disadvantage data duplication overcome clever compression advantage query actually table copy superfast querying database store data center yeah essentially colocation facility area freemont bunch machine hand build diffbot rack cloud service handle auto scale automatic apis serve load bare metal sensor detect query high load spin cloud native catch load scale back motivation machine kind cost benefit analysis payback period measure month program machine reason machine learn workload typical machine give idea build look core drive inaudible terabyte ssds terabyte multiple gpus pretty large machine rent instance right currently weird query semantics ultimately need serve query quickly knowledge graph build weird query actually machine learn pipeline actually build whole process take webpage build knowledge graph involve computer vision natural language process determine entity entity fusion algorithms require high amount memory compute love hardware ball heresy business actual database store machine true yeah datacenter look essentially whole bunch farm diffbot pretty similar google scale operation employee headcount farm server function farm perform render large rendering deployment right read html actually render browser page farm machine farm machine natural language understand take text understand text language english arabic french german entity text relationship involve entity farm responsible look pixel image determine inside picture macbook inside picture picture picture kind specialized computer vision algorithms detect entity continue talk little computer vision machine learning pipeline take place datacenter knowledge graph host datacenter page parse page crawler call extraction data free case additional piece data maybe webpage derive meaning find entity entity kind look entity database sort figure merge page entity preexist model call knowledge fusion assign truths probability sort page entity page entities entity database probabilistic model love think today world assign truth news story people binary outlook real fake news talk science people binary outlook drug work treat cancer actual truth scientifically objectively probabilistic model yeah distribution distribution binary model love bake diffbot model world sure probability assign tell model build world continually learn yeah treat internet essentially world large manmade sensor combine multiple page reason factor noise involve afraid noise page still practical update linkedin profile current company page correct current change overtime school webpage still college page aspect entity instagram account professional error necessarily malicious error degree russian troll farm benign error error extraction possible source potential noise difference product page product ounce page ounces believe believe confidence right problem human google right query read page sort synthesize page come clear picture believe call process knowledge fusion akin page rank kind algorithm recursively assign trust origin history produce true trustworthy assign great weight well take source give example early wikipedia wikipedia factual algorithm naturally assign trust produce wikipedia brand wordpress blog come last month signal news source eventually overweigh kind prior similar scientific process work preponderance evidence definitely counteract kind inherent prior trust worth origin kind knowledge fusion actually knowledge graph example page mike tung life planet venus know knowledge graph mike tung work diffbot diffbot area mountain view california california united state planet earth earth venus million mile away unlikely commute million mile home planet venus earth ontological reasoning well logical reasoning knowledge graph order discount spurious active research area weigh kind subjective topic pretty objective statement human agree person gender work company determine people preference sentiment kind subjective measure right easy validate rule truth probability example come wikipedia article wordpress site yesterday wikipedia article year maybe traffic data maybe citation data page rank kind order understand trustworthiness ideally able machine derive rule trust base rule hand define trust base rule page year trust page year think truth system probability truth system deep learning model assign probability truth engineer hand trust wikipedia kind recursive definition right original page rank paper reason trust wikipedia history generate determine true collaborate source sort truth weight truth weight give truth weighting source similar page rank initially work define website important backlinks site across diversity place important infer machine learning important kind truth converge sort consensus wellinformed person arrive obviously possible world wrong discover later true meet human quality google knowledge graph heard talk think talk stratum knowledge graph large google knowledge graph yeah right first take account grain salt kind first search people talk bing large google large index think important metric give knowledge graph entity care case sale build market research universe entity concern knowledge graph look google knowledge graph panel show query right hand side notice pretty obvious entity come wikipedia wikipedia essentially encyclopedia celebrity famous people call head entity know wikipedia entry family coworkers kind people interact kind people business recruit customer generally people wikipedia page people interact daily wikipedia applies apply entity type product interact place restaurant sure chipotle street office wikipedia page entity mention actually diffbot knowledge graph presence able extract fuse entity sort benchmarking take universe entity query google knowledge graph find significantly google knowledge graph google offer kind offer service kind extraction knowledge sort extraction knowledge graph severely handicapped return back name description entity generally wikipedia article property entity weird yeah look open source knowledge graph best recommend wikidata crowd source structured knowledge graph produce wikimedia organization folk wikipedia couple question cloud serve request scalability maybe fault tolerance backup tell interaction cloud datacenter yeah serve request bare metal efficient cost effective ondemand service extraction period physical hardware serve request latency guarantee cloud primary auto scale farm write script detect machine load spin virtual machine quickly match load come detect load level scale back think second minute machine scale final question talk little stratum idea knowledge work change future pertain maybe white collar white collar knowledge work evolve role knowledge graph play share little vision future yeah summer back high school work data entry person call center fulfillment bellsouth level knowledge work gather enter align mission automate sort knowledge front work possible think human brain power derive insight think spending upwards enter database keep databases date world change strong belief future technology diffbot essentially automate knowledge acquisition relationship system human system heavy lifting gather internet world large sensor update sale database recruit database inventory part database human essentially manage autonomous system direct need data entry kind start actually knowledge graph sort intelligent application yeah kind trend continue think leave knowledge work place analogy think agricultural revolution past people actually manually plow field modern farmer actually manage john deere tractor guided machine heavy lifting think true knowledge work mike thanks come show thanks work cool product yeah thank"





# you only needs to do this once, this is a mapping of index to
feature_names=vectorizer.get_feature_names()

#generate tf-idf for the given document
tf_idf_vector=vectorizer.transform([test])

#sort the tf-idf vectors by descending order of scores
sorted_items=sort_coo(tf_idf_vector.tocoo())
print('sorted',sorted_items[:30])
#extract only the top n; n here is 10
keywords=extract_topn_from_vector(feature_names,sorted_items,40)
print('raw keywords', keywords)
# now print the results
print("\n===Keywords===")
for k in keywords:
    print(k,keywords[k])
